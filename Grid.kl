require Math;
require Aliases;

// ===============================================
/// [2d/3d]
alias Vec2_i CellCoord;
alias Vec2_i GridSize;

// ===============================================
/// Grid interface.
/// NOTE: Implementing spatial hashing like data structure in mind.
interface IGrid
{
	/// Get the grid size.
	GridSize getGridSize();
	/// Get the coordinate of the cell that contains pos.
	CellCoord getCellCoord(Point pos);
	/// Returns true if there's a cell for the coordinate exists.
	Boolean isValidCellCoord(CellCoord coord);
	/// Get cell value.
	UInt32 getCellValue(CellCoord coord);
	/// Set cell value.
	setCellValue!(CellCoord coord, UInt32 newVal);
};

// ===============================================
/// Simple packed rectangular grid that implements IGrid.
object SimpleGrid : IGrid
{
	private UInt32 cells[];
	private GridSize gridSize;
	private Point origin;
};

function SimpleGrid(GridSize gridSize, Point origin)
{
	this.gridSize = gridSize;
	this.cells.resize(gridSize.x * gridSize.y);
	this.origin = origin;
}

function GridSize SimpleGrid.getGridSize()
{
	return this.gridSize;	
}

private function Index SimpleGrid.cellToIndex(CellCoord coord)
{
	// [2d/3d]
	//return
	//	coord.z * this.gridSize.x * this.gridSize.y +
	//	coord.y * this.gridSize.x +
	//	coord.x;
	return coord.y * this.gridSize.x + coord.x;

}

function CellCoord SimpleGrid.getCellCoord(Point pos)
{
	// [2d/3d]
	//return CellCoord(pos.x - this.origin.x, pos.y - this.origin.y, pos.z - this.origin.z);
	return CellCoord(pos.x - this.origin.x, pos.y - this.origin.y);
}

function UInt32 SimpleGrid.getCellValue(CellCoord coord)
{
	return this.cells[this.cellToIndex(coord)];
}

function Boolean SimpleGrid.isValidCellCoord(CellCoord coord)
{
	// [2d/3d]
	//return coord.x >= 0 && coord.y >= 0 && coord.z >= 0 && coord.x < this.gridSize.x && coord.y < this.gridSize.y && coord.z < this.gridSize.z;
	return coord.x >= 0 && coord.y >= 0 && coord.x < this.gridSize.x && coord.y < this.gridSize.y;
}

function SimpleGrid.setCellValue!(CellCoord coord, UInt32 newVal)
{
	this.cells[this.cellToIndex(coord)] = newVal;
}
